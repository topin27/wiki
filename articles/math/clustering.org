#+TITLE: 聚类

所谓聚类问题，就是给定一个元素集合D，其中每个元素具有n个可观察属性，使用某种算法将D划分成k个子集，要求每个子集内部的元素之间相异度尽可能低，而不同子集的元素相异度尽可能高。其中每个子集叫做一个簇。

* K-Means

** 到质心的距离

1. Minkowski Distance :: $d_{ij}=\sqrt{\lambda}{\sum_{k=1}^{N}|x_{ik}-x_{jk}|^{\lambda}}$
2. Euclidean Distance :: Minkowski Distance中的 $\lambda=2$
3. Manhattan Distance :: Minkowski Distance中的 $\lambda=1$

以上的距离计算方式有一个最大的问题是取值范围大的属性对距离的影响大于取值范围小的属性。常用的做法是需要将距离进行归一化： $a_i^'=\frac{a_i-min(a_i)}{max(a_i)-min(a_i)}$

而对于不仅有大小还有方向的向量，再使用传统的距离来度量相异度不是一个好的办法，一种计算方式是用两个向量的余弦来进行度量： $s(X,y)=\frac{X^tY}{{\Arrowvert}X{\Arrowvert}{\Arrowvert}Y{\Arrowvert}}$

** 算法

---------
#+BEGIN_VERSE
    1. 随机选择k个样本作为初始的质心；
    2. 计算剩下元素到这k个质心的相异度，并划分到相异度最低的簇；
    3. 重新计算k个簇的质心；
    4. 将样本集中所有点以新的质心为中心点重新进行计算；
    5. 重新计算3、4步，直到聚类结果不再变化；
#+END_VERSE
---------

* GMM

** 算法定义

对样本的概率密度分布进行估计，而估计的模型是几个高斯模型加权之和，每个高斯模型代表了一个类，对样本中国年的数据分别在几个高斯模型上进行投影，就会得到在各个类上的概率，然后选取概率最大的类作为聚类结果。

理论上，可以通过增加model的个数，用GMM近似任何概率分布。通常用于解决同一集合下的数据包含多个不同的分布的情况（或者同一类分布但参数不同）。

其数学定义为： $p(x)=\sum_{k=1}^{K}{{\pi_k}p(x|k)}$ 其中K为模型的个数， $\pi\_k$ 为第k个高斯模型的权重， $p(x|k)$ 为第k个高斯的概率密度函数，且其均值为 $\mu_k$ ，方差为 $\sigma_k$ 。对此概率密度的估计就是要求 $\pi_k$ 、 $\mu_k$ 、 $\sigma_k$各个变量。

** 先验知识

*** 最大似然估计

最大似然估计（MLE）的目的是利用已知样本结果，反推最有可能导致这样结果的参数值。即“模型已定，参数未知”，通过若干次实验，观察其结果，利用实验结果得到某个参数值能够使得样本出现的概率为最大。

*** EM算法

EM（exceptation maximization algorithm）算法的每次迭代由两步组成：

- E步，求期望（exceptation）；
- M步，求极大（maximization）。

其大致过程是对于待确定的参数选定一个初始值，然后以此计算结果，和真实的样本进行对比，反过来估计待确定的参数，重复多次，直至稳定。

-------
#+BEGIN_VERSE
   EM算法在GMM中的流程为：

   1. 对于第i个样本 $x_i$ 来说，它由第k个model生成的概率为： $w_i(k)=\frac{\pi_kN(x_i|\mu_k,\sigma_k)}{\sum_{j=1}^K{\pi_jN(x_i|\mu_j,\sigma_j)}}$
   2. 得到每个点的 $w_i(k)$ 后，可以这样考虑：对样本 $x_i$ 来说，它的 $w_i(k)x_i$ 的值是由第k个高斯模型产生的，即第k个高斯模型产生了 $w_i(k)x_i,(i=1,{\cdots}N)$ 这些数据。估计第k个高斯模型的参数时，我们就用 $w_i(k)x_i,(i=1,{\cdots}N)$ 这些数据去做最大似然参数估计；
   3. 重复以上两步直至算法收敛。
#+END_VERSE
-------

** 算法过程

GMM的原始形式为： $p(x)=\sum_{k=1}^{K}\pi_kp(x|k)$ 其中 $\pi_k$ 为第k类被选中的概率，引入一个新的K维随机变量 $z_k,z_k\in{\{0,1\}}且\sum_K{z_k}=1$ ， $z_k=1$ 表示第k类被选中，则其概率为 $p(z_k=1)=\pi_k$ 。例如，对于有两个类，如果是从第一个类中选择一个点，则 $z=(1,0)$ ，如果从第二类中取出一个点，则 $z=(0,1)$ 。

如果 $z_k$ 之间是独立同分布的（iid）,那么z的联合概率分布为： $p(z)=p(z_1)p(z_2)...p(z_K)=\prod_{k=1}^{K}\pi_k^{z_k}$ 由于每一个类中的数据都是正态分布的，因此 $p(x|z_k=1)=\mathcal{N}(x|\mu_k,\Sigma/k)$ 进而 $p(x|z)=\prod/{k=1}^{K}\mathcal{N}(x|\mu_k,\Sigma/k)^{{z_k}}$ 根据条件概率公式，可得 $p(x)$ 的形式为： $p(x)=\sum/{z}p(z)p(x|z)=\sum/{i=1}{K}\pi/{k}\mathcal{N}(x|\mu_k,\Sigma_k)$ 这里需要注意的是这里有一个隐含变量z，其含义是我们的数据可以分成K类，但是随机抽取一个点，我们并不知道这个数据点是属于哪个类，这个不确定用z来进行描述。

根据贝叶斯公式， $p(z)$ 是先验概率， $p(x|z)$ 是似然概率，则后验概率 $p(z|x)$ 为： $$\gamma(z_k)=p(z_k=1|x)=\frac{p(z_k=1)p(x|z_k=1)}{p(x,z_k=1)}=\frac{p(z_k=1)p(x|z_k=1)}{\sum_{j=1}^{K}p(z_j=1)p(x|z_j=1)}=\frac{\pi_k\mathcal{N}(x|\mu_k,\Sigma_k)}{\sum_{j=1}^{K}\pi_j\mathcal{N}(x|\mu_j,\Sigma_j)}$$ 使用符号 $\gamma(z_k)$ 来表示第k个分量的后验概率。

最终的式子中，有三个参数需要使用EM算法进行估计，分别是 $\pi$ 、 $\mu$ 和 $\Sigma$ 。

* DBSCAN

DBSCAN(Density-Based Spatial Clustering of Applications with Noise，具有噪声的基于密度的聚类方法)是一种很典型的密度聚类算法，和K-Means，BIRCH这些一般只适用于凸样本集的聚类相比，DBSCAN既可以适用于凸样本集，也可以适用于非凸样本集。

** 原理

基于这样的假设，同一类别的样本之间是紧密相连的。

** 密度定义

假设样本集 $D=(x_1,x_2,...,x_m)$ ，DBSCAN具体的密度描述定义如下：

1. $\epsilon$ -领域：对于 ${x_j}\in{D}$ ，其中 $\epsilon$ -领域包含样本集D中与 $x_j$ 的距离不大于 $\epsilon$ 的子样本集，即 $N_\epsilon(x_j)={x_i{\in}D|distance(x_i,x_j)\le{\epsilon}}$ ，这样的子样本集的个数记为 $|N_\epsilon(x_j)|$ ；
2. 核心对象：任一样本的 $\epsilon$ -领域中至少包含MinPts个样本，则 $x_j$ 是核心对象；
3. 密度直达：如果 $x_i$ 位于 $x_j$ 的 $\epsilon$ -领域中，且 $x_j$ 是核心对象，则称 $x_i$ 由 $x_j$ 密度直达；
4. 密度可达：在一对密度直达关系 $x_i$ 和 $x_j$ 中，如果 $x_k$ 由 $x_i$ 密度直达，则称 $x_k$ 由 $x_j$ 密度可达；
5. 密度相连：对于 $x_i$ 和 $x_j$ ，如果有一个核心样本对象 $x_k$ ，使得 $x_i$ 和 $x_j$ 均由 $x_k$ 密度可达，则称 $x_i$ 和 $x_j$ 密度相连。

** 聚类思想

由密度可达关系导出最大密度相连的样本集合，即为最终聚类的一个类别。首先任意选择一个没有类别的核心对象最为种子，然后找到所有这个核心对象能够密度可达的样本集合，接着选择另一个没有类别的核心对象去寻找密度可达的样本集合，一直运行到所有核心对象都有类别为止。

** 算法
    
------
#+BEGIN_VERSE
    1. 首先通过距离度量的方式遍历所有的点，寻找出所有的核心对象；
    2. 随机选择一个核心对象，以密度可达为条件，构建当前蔟；
#+END_VERSE
------

* 参考

- [[https://www.zhihu.com/question/34554321][用于数据挖掘的聚类算法有哪些，各有何优势？]]
- [[http://www.cnblogs.com/leoo2sk/archive/2010/09/20/k-means.html][算法杂货铺------k均值聚类(K-means)]]
- 《统计学习方法》
- [[https://blog.csdn.net/jinping_shi/article/details/59613054][高斯混合模型（GMM）及其EM算法的理解]]
- [[https://www.cnblogs.com/pinard/p/6208966.html][DBSCAN密度聚类算法]]
