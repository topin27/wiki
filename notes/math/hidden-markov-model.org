#+TITLE: 隐马尔可夫模型

隐马尔可夫模型描述由一个隐藏的马尔可夫链随机生成不可观测的状态随机序列，再由各个状态生成一个观测而产生观测随机序列的过程。

以下讨论基于如下例子：

#+BEGIN_VERSE
    有三个不同的骰子，第一个骰子有6个面，每个面1，2，3，4，5，6出现的概率都是1/6，称为 $D6$ ，第二个骰子是个四面体，每个面出现的概率也相同，成为 $D4$  ，第三个骰子是一个八面体，每一面出现的概率是1/8，骰子标记为 $D8$ 。
#+END_VERSE

* 马尔可夫假设

交通灯状态的变换是确定的，因为当前状态切换到下一个状态的状态切换是确定的，此为确定性系统。但是实际当中还是存在着许多不确定的系统，比如天气、股票。因此引入马尔可夫假设：

#+BEGIN_EXAMPLE
    模型的状态依赖于前一个（些）的状态
#+END_EXAMPLE

衍生的有马尔可夫过程，即每个状态的转移只依赖于之前的 n 个状态，该过程就被称为 n 阶模型。

* 一些术语

- 可见状态链：假如投掷骰子10次，得到一串数字： =1 6 3 5 2 7 3 5 2 4=
- 隐含状态链（马尔可夫链）：投掷10次骰子的过程中，每次所使用的骰子序列，比如 =D6 D8 D8 D4 ...=
- 转换概率：隐含状态之间切换的概率矩阵，在本例中，隐态之间相互切换的概率都是 $\frac{1}{3}$
- 输出概率：每个隐含状态对应的可见状态都有一个概率，比如 $D6$ 对应的可见状态的概率是 $\frac{1}{6}$

* 三个问题

通常隐马问题都是信息有所缺失，根据已有的数据去估计这些缺失的信息，根据需要估计的信息的不同，分为了以下三种问题：

1. 知道骰子有几种（隐含状态数量），每种骰子是什么（转换概率），根据掷骰子掷出的结果（可见状态链），我想知道每次掷出来的都是哪种骰子（隐含状态链）。
2. 还是知道骰子有几种（隐含状态数量），每种骰子是什么（转换概率），根据掷骰子掷出的结果（可见状态链），我想知道掷出这个结果的概率。
3. 知道骰子有几种（隐含状态数量），不知道每种骰子是什么（转换概率），观测到很多次掷骰子的结果（可见状态链），我想反推出每种骰子是什么（转换概率）。

** 估计隐含状态链

对应到本问题的就是说，现在知道有多少个骰子，也知道了可见状态链（投掷10次的结果），求最可能的骰子序列。

最简单直接的方式就是穷举方式计算所有可能的隐含状态链序列，求出每个可能出现当前状态的概率，取概率最高的隐含状态序列作为结果。比如：假设知道骰子有 =D4= 、 =D6= 、 =D8= 三种，且投掷三次的骰子顺序为 $D6{\to}D8{\to}D8$ ，三者之间的转移概率都为 $\frac{1}{3}$ ，则在此骰子序列的前提条件下结果为 =1 6 3= 的概率为 $P=P(D6)*P(D6{\to}1)*P(D6{\to}D8)*P(D8{\to}6)*P(D8{\to}D8)*P(D8{\to}3)$

穷举算法确实可以计算所有可能的隐含状态链，但是如果链长度太长则会导致计算量过大无法完成，因此引入了 Viterbi 算法。

*** Viterbi 算法

Viterbi 算法是一种动态规划算法，其思想为：从起点到终点，每走一步，都记录下到达当前节点的最短路径，然后依次为基准继续向前推进，显然，如果当前这个最短路径都不是最优，那么中间的其他节点更不可能是最优。

需要注意的和 A* 算法之间的区别，A* 算法是典型的贪心算法，每一步都会寻找当前条件下的最优。

通过 Viterbi 算法，首先计算出第一个结果最可能对应的骰子，基于此，再计算第二个结果最可能对应的骰子。最终的结果既是最可能的隐含状态链。

** 估计可见状态链的概率

同样，最简单的方式还是计算出当前可见状态链对应的所有可能的隐含状态链的概率，然后相加求和即得当前可见状态链的概率。但是也同样涉及到穷举的问题，因此需要使用 Forward Algorithm 进行改进。

Forward 算法是每次仅计算一个隐含状态出现对应可见状态的概率，然后在此基础上计算第二个隐含状态对应可见状态的概率。

* 参考

- [[https://www.zhihu.com/question/20962240][如何用简单易懂的例子解释隐马尔可夫模型？]]
